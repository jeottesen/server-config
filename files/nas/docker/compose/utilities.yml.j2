{% include '_anchors.yml.j2' %}

services:
  {# # Autoindex - Simple Directory Index
  autoindex:
    extends:
      file: common.yml
      service: common-keys-apps
    container_name: autoindex
    image: dceoy/nginx-autoindex:latest
    volumes:
      - $USER_DIR/index:/var/lib/nginx/html:ro # Location you want to index
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.autoindex-rtr.entrypoints=https"
      - "traefik.http.routers.autoindex-rtr.rule=Host(`index.$DOMAIN_NAME`)"
      ## Middlewares
      - "traefik.http.routers.autoindex-rtr.middlewares=chain-no-auth@file"
      ## HTTP Services
      - "traefik.http.routers.autoindex-rtr.service=autoindex-svc"
      - "traefik.http.services.autoindex-svc.loadbalancer.server.port=80" #}

  organizr:
    extends:
      file: common.yml
      service: common-keys-apps
    container_name: organizr
    image: organizr/organizr
#    ports:
#      - "$ORGANIZR_PORT:80"
    volumes:
      - $CONTAINER_APPDATA_DIR/organizr:/config
    environment:
      <<: *primary-tz-puid-pgid
      fpm: "true" #true or false | using true will provide better performance
      branch: v2-master #v2-master or #v2-develop
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.organizr-rtr.entrypoints=websecure"
      - "traefik.http.routers.organizr-rtr.rule=Host(`$DOMAIN_NAME`) || Host(`www.$DOMAIN_NAME`) || Host(`login.$DOMAIN_NAME`)"
      ## Middlewares
      - "traefik.http.routers.organizr-rtr.middlewares=chain-oauth@file"
      ## HTTP Services
      - "traefik.http.routers.organizr-rtr.service=organizr-svc"
      - "traefik.http.services.organizr-svc.loadbalancer.server.port=80"

  unifi-controller:
    extends:
      file: common.yml
      service: common-keys-apps
    image: lscr.io/linuxserver/unifi-controller
    container_name: unifi-controller
    environment:
      <<: *default-tz-puid-pgid
      MEM_LIMIT: 1024 #optional
      MEM_STARTUP: 1024 #optional
    volumes:
      - $CONTAINER_APPDATA_DIR/unifi:/config
    ports:
      - 3478:3478/udp
      - 10001:10001/udp
      - 8080:8080
      - 8443:8443
      #- 1900:1900/udp #optional
      - 8843:8843 #optional
      - 8880:8880 #optional
      - 6789:6789 #optional
      - 5514:5514/udp #optional
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.unifi-rtr.tls=true"
      - "traefik.http.routers.unifi-rtr.entrypoints=websecure"
      - "traefik.http.routers.unifi-rtr.rule=Host(`unifi.$DOMAIN_NAME`)"
      ## Middlewares
      - "traefik.http.routers.unifi-rtr.middlewares=chain-oauth@file"
      ## HTTP Services
      - "traefik.http.routers.unifi-rtr.service=unifi-svc"
      - "traefik.http.services.unifi-svc.loadbalancer.passHostHeader=true"
      - "traefik.http.services.unifi-svc.loadbalancer.server.scheme=https"
      - "traefik.http.services.unifi-svc.loadbalancer.server.port=8443"
      - "traefik.http.services.unifi-svc.loadbalancer.serversTransport=isv-transport@file"

  speedtest-tracker:
    extends:
      file: common.yml
      service: common-keys-apps
    container_name: speedtest-tracker
    image: lscr.io/linuxserver/speedtest-tracker:latest
    volumes:
      - $CONTAINER_APPDATA_DIR/speedtest:/config
    environment:
      <<: *primary-tz-puid-pgid
      DB_CONNECTION: "sqlite"
      PUBLIC_DASHBOARD: "true"
      SPEEDTEST_SCHEDULE: "0 0,12 * * *"
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.speedtest-rtr.entrypoints=websecure"
      - "traefik.http.routers.speedtest-rtr.rule=Host(`speedtest.$DOMAIN_NAME`)"
      ## Middlewares
      - "traefik.http.routers.speedtest-rtr.middlewares=chain-oauth@file"
      ## HTTP Services
      - "traefik.http.routers.speedtest-rtr.service=speedtest-svc"
      - "traefik.http.services.speedtest-svc.loadbalancer.server.scheme=https"
      - "traefik.http.services.speedtest-svc.loadbalancer.server.port=443"
      - "traefik.http.services.speedtest-svc.loadbalancer.serversTransport=isv-transport@file"

  filebrowser:
    extends:
      file: common.yml
      service: common-keys-apps
    image: filebrowser/filebrowser
    container_name: filebrowser
    user: $PUID:$PGID
    volumes:
      - /data/:/srv/:ro
      - $CONTAINER_APPDATA_DIR/filebrowser/filebrowser.db:/database/filebrowser.db
      - $CONTAINER_APPDATA_DIR/filebrowser/.filebrowser.json:/.filebrowser.json
    environment:
      FB_NOAUTH: noauth
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.filebrowser-rtr.entrypoints=websecure"
      - "traefik.http.routers.filebrowser-rtr.rule=Host(`files.$DOMAIN_NAME`)"
      ## Middlewares
      - "traefik.http.routers.filebrowser-rtr.middlewares=chain-oauth@file" # ,default-guest-user"
      ## HTTP Services
      - "traefik.http.routers.filebrowser-rtr.service=filebrowser-svc"
      - "traefik.http.services.filebrowser-svc.loadbalancer.server.port=80"

  open-webui:
    extends:
      file: common.yml
      service: common-keys-apps
    image: ghcr.io/open-webui/open-webui:main
    container_name: open-webui
    volumes:
      - $CONTAINER_APPDATA_DIR/open-webui:/app/backend/data
    environment:
      WEBUI_AUTH_TRUSTED_EMAIL_HEADER: 'X-Forwarded-User'
      GOOGLE_DRIVE_CLIENT_ID: "{{ google_drive_client_id }}"
      GOOGLE_DRIVE_API_KEY: "{{ google_drive_api_key }}"
      GOOGLE_REDIRECT_URI: "$DOMAIN_NAME"
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.open-webui-rtr.entrypoints=websecure"
      - "traefik.http.routers.open-webui-rtr.rule=Host(`ai.$DOMAIN_NAME`)"
      ## Middlewares
      - "traefik.http.routers.open-webui-rtr.middlewares=chain-oauth@file" 
      ## HTTP Services
      - "traefik.http.routers.open-webui-rtr.service=open-webui-svc"
      - "traefik.http.services.open-webui-svc.loadbalancer.server.port=8080"

  vaultwarden:
    extends:
      file: common.yml
      service: common-keys-apps
    image: vaultwarden/server:latest
    container_name: vaultwarden
    user: 1000:1000
    volumes:
      - $CONTAINER_APPDATA_DIR/vaultwarden:/data
    environment:
      <<: *primary-tz-puid-pgid
      DOMAIN: "https://vault.cobaltcavern.com"
      SIGNUPS_ALLOWED: "false"
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.vaultwarden-rtr.entrypoints=websecure"
      - "traefik.http.routers.vaultwarden-rtr.rule=Host(`vault.$DOMAIN_NAME`)"
      ## Middlewares
      - "traefik.http.routers.vaultwarden-rtr.middlewares=chain-no-auth@file" # Use vaultwardens authentication
      ## HTTP Services
      - "traefik.http.routers.vaultwarden-rtr.service=vaultwarden-svc"
      - "traefik.http.services.vaultwarden-svc.loadbalancer.server.port=80"

  syncthing:
    extends:
      file: common.yml
      service: common-keys-apps
    image: syncthing/syncthing:latest
    container_name: syncthing
    hostname: cobalt-syncthing
    volumes:
      - $CONTAINER_APPDATA_DIR/syncthing:/var/syncthing
      - /data/Games/Emudeck/:/sync/emudeck
    user: 1000:1000
    environment:
      <<: *primary-tz-puid-pgid
    ports:
      - 22000:22000/tcp # TCP file transfers
      - 22000:22000/udp # QUIC file transfers
      #- 21027:21027/udp # Receive local discovery broadcasts
    restart: unless-stopped
    healthcheck:
      test: curl -fkLsS -m 2 127.0.0.1:8384/rest/noauth/health | grep -o --color=never OK || exit 1
      interval: 1m
      timeout: 10s
      retries: 3
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.syncthing-rtr.entrypoints=websecure"
      - "traefik.http.routers.syncthing-rtr.rule=Host(`sync.$DOMAIN_NAME`)"
      ## Middlewares
      - "traefik.http.routers.syncthing-rtr.middlewares=chain-oauth@file"
      ## HTTP Services
      - "traefik.http.routers.syncthing-rtr.service=syncthing-svc"
      - "traefik.http.services.syncthing-svc.loadbalancer.server.port=8384"