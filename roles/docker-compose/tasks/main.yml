---
- name: Setup docker-compose files
  become: true
  tags: compose-setup
  block:

    - name: Setup wireguard
      ansible.builtin.include_tasks: secrets.yml

    - name: Ensure appdata directory structure exists
      ansible.builtin.file:
        path: "{{ container_appdata_path }}/{{ item.path }}"
        state: directory
        owner: "{{ docker_user }}"
        group: "{{ docker_group }}"
        mode: "0755"
      loop: "{{ query('ansible.builtin.filetree', appdata_templates_source) }}"
      when: item.state == 'directory'

    - name: Ensure files are populated from appdata templates
      ansible.builtin.template:
        src: "{{ item.src }}"
        dest: '{{ container_appdata_path }}/{{ item.path | regex_replace("\.j2$", "") }}'
        owner: "{{ docker_user }}"
        group: "{{ docker_group }}"
        mode: "0644"
      loop: "{{ query('ansible.builtin.filetree', appdata_templates_source) }}"
      when: item.state == 'file'

- name: Setup docker-compose files
  become: true
  block:
    - name: Create docker-compose.yml file
      ansible.builtin.template:
        src: "{{ templates_source }}/docker-compose.yml.j2"
        dest: "{{ docker_dir }}/docker-compose.yml"
        owner: "{{ docker_user }}"
        group: "{{ docker_group }}"
        mode: "0600"

    - name: Create docker-compose .env file
      ansible.builtin.template:
        src: "{{ templates_source }}/.env.j2"
        dest: "{{ docker_dir }}/.env"
        owner: "{{ docker_user }}"
        group: "{{ docker_group }}"
        mode: "0600"

    - name: Pull and start docker-compose configuration
      community.docker.docker_compose_v2:
        project_src: "{{ docker_dir }}"
    #  register: output

    # - name: Show results
    #   ansible.builtin.debug:
    #     var: output
